{"version":3,"file":"stack-synthesizer.js","sourceRoot":"","sources":["../../../../src/provider-utils/awscloudformation/auth-stack-builder/stack-synthesizer.ts"],"names":[],"mappings":";;;AAAA,wCAAiF;AAEjF,6EAAuE;AACvE,6FAAmH;AAEnH,MAAa,mBAAoB,SAAQ,6BAAsB;IAA/D;;QACmB,WAAM,GAAuB,IAAI,GAAG,EAAE,CAAC;QAgCxD,aAAQ,GAAG,CAAC,SAAiB,EAAS,EAAE;YACtC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;gBAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAE,CAAC;aACpC;YACD,MAAM,IAAI,KAAK,CAAC,SAAS,SAAS,iBAAiB,CAAC,CAAC;QACvD,CAAC,CAAC;IACJ,CAAC;IAnCW,uBAAuB,CAAC,KAAY,EAAE,OAA0B;QACxE,IACE,KAAK,YAAY,oDAAuB;YACxC,KAAK,YAAY,8DAAyB;YAC1C,KAAK,YAAY,qEAAgC,EACjD;YACA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,MAAM,QAAQ,GAAG,KAAK,CAAC,4BAA4B,CAAC,OAAO,CAAW,CAAC;YACvE,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;YACnC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;SAC5C;aAAM;YACL,MAAM,IAAI,KAAK,CACb,+HAA+H,CAChI,CAAC;SACH;IACH,CAAC;IAED,aAAa,CAAC,YAAoB,EAAE,QAAgB;QAClD,mBAAmB,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,aAAa;QACX,OAAO,IAAI,GAAG,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,QAAQ,CAAC,KAAY;QACnB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;;AA/BH,kDAuCC;AArCyB,+BAAW,GAA0B,IAAI,GAAG,EAAE,CAAC","sourcesContent":["import { ISynthesisSession, Stack, LegacyStackSynthesizer } from '@aws-cdk/core';\nimport { Template } from 'cloudform-types';\nimport { AmplifyAuthCognitoStack } from './auth-cognito-stack-builder';\nimport { AmplifyUserPoolGroupStack, AmplifyUserPoolGroupStackOutputs } from './auth-user-pool-group-stack-builder';\n\nexport class AuthStackSythesizer extends LegacyStackSynthesizer {\n  private readonly stacks: Map<string, Stack> = new Map();\n  private static readonly stackAssets: Map<string, Template> = new Map();\n\n  protected synthesizeStackTemplate(stack: Stack, session: ISynthesisSession): void {\n    if (\n      stack instanceof AmplifyAuthCognitoStack ||\n      stack instanceof AmplifyUserPoolGroupStack ||\n      stack instanceof AmplifyUserPoolGroupStackOutputs\n    ) {\n      this.addStack(stack);\n      const template = stack.renderCloudFormationTemplate(session) as string;\n      const templateName = stack.node.id;\n      this.setStackAsset(templateName, template);\n    } else {\n      throw new Error(\n        'Error synthesizing the template. Expected Stack to be either instance of AmplifyAuthCognitoStack or AmplifyUserPoolGroupStack',\n      );\n    }\n  }\n\n  setStackAsset(templateName: string, template: string): void {\n    AuthStackSythesizer.stackAssets.set(templateName, JSON.parse(template));\n  }\n\n  collectStacks(): Map<string, Template> {\n    return new Map(AuthStackSythesizer.stackAssets.entries());\n  }\n\n  addStack(stack: Stack) {\n    this.stacks.set(stack.node.id, stack);\n  }\n\n  getStack = (stackName: string): Stack => {\n    if (this.stacks.has(stackName)) {\n      return this.stacks.get(stackName)!;\n    }\n    throw new Error(`Stack ${stackName} is not created`);\n  };\n}\n"]}