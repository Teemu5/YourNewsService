import * as cdk from '@aws-cdk/core';
import * as iam from '@aws-cdk/aws-iam';
import * as lambda from '@aws-cdk/aws-lambda';
import { CfnUserPoolGroup } from '@aws-cdk/aws-cognito';
import { AmplifyUserPoolGroupStackTemplate } from '@aws-amplify/cli-extensibility-helper';
import { AmplifyUserPoolGroupStackOptions } from './user-pool-group-stack-transform';
import { AmplifyStackTemplate } from 'amplify-cli-core';
export declare type AmplifyAuthCognitoStackProps = {
    synthesizer: cdk.IStackSynthesizer;
};
export declare class AmplifyUserPoolGroupStack extends cdk.Stack implements AmplifyUserPoolGroupStackTemplate, AmplifyStackTemplate {
    _scope: cdk.Construct;
    private _cfnParameterMap;
    private _cfnConditionMap;
    userPoolGroup: Record<string, CfnUserPoolGroup>;
    userPoolGroupRole: Record<string, iam.CfnRole>;
    roleMapCustomResource?: cdk.CustomResource;
    roleMapLambdaFunction?: lambda.CfnFunction;
    lambdaExecutionRole?: iam.CfnRole;
    constructor(scope: cdk.Construct, id: string, props: AmplifyAuthCognitoStackProps);
    getCfnOutput(logicalId: string): cdk.CfnOutput;
    getCfnMapping(logicalId: string): cdk.CfnMapping;
    addCfnOutput(props: cdk.CfnOutputProps, logicalId: string): void;
    addCfnMapping(props: cdk.CfnMappingProps, logicalId: string): void;
    addCfnResource(props: cdk.CfnResourceProps, logicalId: string): void;
    addCfnParameter(props: cdk.CfnParameterProps, logicalId: string): void;
    addCfnCondition(props: cdk.CfnConditionProps, logicalId: string): void;
    getCfnParameter(logicalId: string): cdk.CfnParameter;
    getCfnCondition(logicalId: string): cdk.CfnCondition;
    renderCloudFormationTemplate: (_: cdk.ISynthesisSession) => string;
    generateUserPoolGroupResources: (props: AmplifyUserPoolGroupStackOptions) => Promise<void>;
}
export declare const getCfnParamslogicalId: (cognitoResourceName: string, cfnParamName: string) => string;
export declare class AmplifyUserPoolGroupStackOutputs extends cdk.Stack implements AmplifyStackTemplate {
    constructor(scope: cdk.Construct, id: string, props: AmplifyAuthCognitoStackProps);
    getCfnParameter(logicalId: string): cdk.CfnParameter;
    getCfnOutput(logicalId: string): cdk.CfnOutput;
    getCfnMapping(logicalId: string): cdk.CfnMapping;
    getCfnCondition(logicalId: string): cdk.CfnCondition;
    addCfnParameter(props: cdk.CfnParameterProps, logicalId: string): void;
    addCfnOutput(props: cdk.CfnOutputProps, logicalId: string): void;
    addCfnMapping(props: cdk.CfnMappingProps, logicalId: string): void;
    addCfnCondition(props: cdk.CfnConditionProps, logicalId: string): void;
    addCfnResource(props: cdk.CfnResourceProps, logicalId: string): void;
    renderCloudFormationTemplate: (_: cdk.ISynthesisSession) => string;
}
//# sourceMappingURL=auth-user-pool-group-stack-builder.d.ts.map