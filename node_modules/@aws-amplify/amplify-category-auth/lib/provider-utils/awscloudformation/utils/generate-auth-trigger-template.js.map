{"version":3,"file":"generate-auth-trigger-template.js","sourceRoot":"","sources":["../../../../src/provider-utils/awscloudformation/utils/generate-auth-trigger-template.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\nimport * as fs from 'fs-extra';\nimport { JSONUtilities, pathManager } from 'amplify-cli-core';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as cdk from '@aws-cdk/core';\nimport { prepareApp } from '@aws-cdk/core/lib/private/prepare-app';\nimport { AuthTriggerConnection, CognitoStackOptions } from '../service-walkthrough-types/cognito-user-input-types';\nimport { CustomResource } from '@aws-cdk/core';\nimport { authTriggerAssetFilePath } from '../constants';\n\ntype CustomResourceAuthStackProps = Readonly<{\n  description: string;\n  authTriggerConnections: AuthTriggerConnection[];\n}>;\n\nconst CFN_TEMPLATE_FORMAT_VERSION = '2010-09-09';\n\nexport class CustomResourceAuthStack extends cdk.Stack {\n  constructor(scope: cdk.Construct, id: string, props: CustomResourceAuthStackProps) {\n    super(scope, id, props);\n    this.templateOptions.templateFormatVersion = CFN_TEMPLATE_FORMAT_VERSION;\n\n    const env = new cdk.CfnParameter(this, 'env', {\n      type: 'String',\n    });\n\n    const userpoolId = new cdk.CfnParameter(this, 'userpoolId', {\n      type: 'String',\n    });\n\n    const userpoolArn = new cdk.CfnParameter(this, 'userpoolArn', {\n      type: 'String',\n    });\n\n    new cdk.CfnCondition(this, 'ShouldNotCreateEnvResources', {\n      expression: cdk.Fn.conditionEquals(env, 'NONE'),\n    });\n\n    props.authTriggerConnections.forEach(config => {\n      const fnName = new cdk.CfnParameter(this, `function${config.lambdaFunctionName}Name`, {\n        type: 'String',\n      });\n      const fnArn = new cdk.CfnParameter(this, `function${config.lambdaFunctionName}Arn`, {\n        type: 'String',\n      });\n      createPermissionToInvokeLambda(this, fnName, userpoolArn, config);\n      config.lambdaFunctionArn = fnArn.valueAsString;\n    });\n\n    createCustomResource(this, props.authTriggerConnections, userpoolId, userpoolArn);\n  }\n\n  toCloudFormation() {\n    prepareApp(this);\n    return this._toCloudFormation();\n  }\n}\n\nexport async function generateNestedAuthTriggerTemplate(category: string, resourceName: string, request: CognitoStackOptions) {\n  const cfnFileName = 'auth-trigger-cloudformation-template.json';\n  const targetDir = path.join(pathManager.getBackendDirPath(), category, resourceName, 'build');\n  const authTriggerCfnFilePath = path.join(targetDir, cfnFileName);\n  const { authTriggerConnections } = request;\n  if (authTriggerConnections) {\n    const cfnObject = await createCustomResourceforAuthTrigger(authTriggerConnections);\n    JSONUtilities.writeJson(authTriggerCfnFilePath, cfnObject);\n  } else {\n    // delete the custom stack template if the triggers arent defined\n    try {\n      fs.unlinkSync(authTriggerCfnFilePath);\n    } catch (err) {\n      // if its not present do nothing\n    }\n  }\n}\n\nasync function createCustomResourceforAuthTrigger(authTriggerConnections: AuthTriggerConnection[]) {\n  const stack = new CustomResourceAuthStack(undefined as any, 'Amplify', {\n    description: 'Custom Resource stack for Auth Trigger created using Amplify CLI',\n    authTriggerConnections: authTriggerConnections,\n  });\n  const cfn = stack.toCloudFormation();\n  return cfn;\n}\n\nfunction createCustomResource(\n  stack: cdk.Stack,\n  authTriggerConnections: AuthTriggerConnection[],\n  userpoolId: cdk.CfnParameter,\n  userpoolArn: cdk.CfnParameter,\n) {\n  const triggerCode = fs.readFileSync(authTriggerAssetFilePath, 'utf-8');\n  const authTriggerFn = new lambda.Function(stack, 'authTriggerFn', {\n    runtime: lambda.Runtime.NODEJS_12_X,\n    code: lambda.Code.fromInline(triggerCode),\n    handler: 'index.handler',\n  });\n  // reason to add iam::PassRole\n  //AccessDeniedException: User: arn:aws:sts::<ACCOUNT_ID>:assumed-role/amplify-emailcheck-dev-17-authTriggerFnServiceRole-1JAJZTK0HHAHP/amplify-emailcheck-dev-17374-authTriggerFn7FCFA449-SP7WeFmC9mD1 is not authorized to perform: iam:PassRole on resource: arn:aws:iam::ACCOUNT_ID:role/sns533b49c5173740-dev\n  if (authTriggerFn.role) {\n    authTriggerFn.role.addToPrincipalPolicy(\n      new iam.PolicyStatement({\n        effect: iam.Effect.ALLOW,\n        actions: ['cognito-idp:DescribeUserPool', 'cognito-idp:DescribeUserPoolClient', 'cognito-idp:UpdateUserPool', 'iam:PassRole'],\n        resources: ['*'],\n      }),\n    );\n  }\n  // The custom resource that uses the provider to supply value\n  new CustomResource(stack, 'CustomAuthTriggerResource', {\n    serviceToken: authTriggerFn.functionArn,\n    properties: { userpoolId: userpoolId.valueAsString, lambdaConfig: authTriggerConnections },\n    resourceType: 'Custom::CustomAuthTriggerResourceOutputs',\n  });\n}\n\nfunction createPermissionToInvokeLambda(\n  stack: cdk.Stack,\n  fnName: cdk.CfnParameter,\n  userpoolArn: cdk.CfnParameter,\n  config: AuthTriggerConnection,\n) {\n  new lambda.CfnPermission(stack, `UserPool${config.triggerType}LambdaInvokePermission`, {\n    action: 'lambda:InvokeFunction',\n    functionName: fnName.valueAsString,\n    principal: 'cognito-idp.amazonaws.com',\n    sourceArn: userpoolArn.valueAsString,\n  });\n}\n"]}