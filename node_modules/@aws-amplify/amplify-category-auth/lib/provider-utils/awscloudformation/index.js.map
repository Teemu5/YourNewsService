{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/provider-utils/awscloudformation/index.js"],"names":[],"mappings":";AAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,MAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC5B,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC3D,MAAM,EAAE,mBAAmB,EAAE,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;AAC3E,MAAM,EAAE,eAAe,EAAE,sBAAsB,EAAE,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;AAC5F,MAAM,EAAE,mBAAmB,EAAE,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACrH,MAAM,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;AAC5F,MAAM,EAAE,oBAAoB,EAAE,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAClE,MAAM,EAAE,cAAc,EAAE,mBAAmB,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACpE,MAAM,EAAE,cAAc,EAAE,GAAG,OAAO,CAAC,wCAAwC,CAAC,CAAC;AAE7E,SAAS,gBAAgB,CAAC,OAAO,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,0BAA0B,EAAE,eAAe;IACvH,MAAM,qBAAqB,GAAG,GAAG,SAAS,yBAAyB,0BAA0B,EAAE,CAAC;IAChG,MAAM,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;IAC9D,OAAO,kBAAkB,CAAC,OAAO,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,eAAe,CAAC,CAAC;AACjG,CAAC;AAED,KAAK,UAAU,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,aAAa,GAAG,KAAK;IAChE,MAAM,eAAe,GAAG,oBAAoB,EAAE,CAAC,OAAO,CAAC,CAAC;IACxD,MAAM,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,0BAA0B,EAAE,GAAG,eAAe,CAAC;IAClG,OAAO,iBAAiB,CACtB,OAAO,EACP,aAAa,CACd,CAAC,MAAM,gBAAgB,CAAC,OAAO,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,0BAA0B,EAAE,eAAe,CAAC,CAAC,CAAC;AAC7H,CAAC;AAED,KAAK,UAAU,cAAc,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE;IAChD,MAAM,eAAe,GAAG,oBAAoB,EAAE,CAAC,OAAO,CAAC,CAAC;IACxD,MAAM,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,0BAA0B,EAAE,GAAG,eAAe,CAAC;IAClG,OAAO,oBAAoB,CAAC,OAAO,CAAC,CAClC,MAAM,gBAAgB,CAAC,OAAO,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,0BAA0B,EAAE,eAAe,CAAC,CACxH,CAAC;AACJ,CAAC;AAED,KAAK,UAAU,qBAAqB,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO;IAC7D,MAAM,YAAY,GAAG,oBAAoB,EAAE,CAAC,OAAO,CAAC;IACpD,MAAM,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,0BAA0B,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC;IAEzG,MAAM,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAE5E,MAAM,cAAc,GAAG,cAAc,CAAC,sBAAsB,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAEvF,IAAI,wBAAwB,GAAG,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IAErG,MAAM,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,aAAa,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;IAK5E,IAAI,QAAQ,IAAI,QAAQ,CAAC,WAAW,KAAK,UAAU,EAAE;QACnD,IAAI,2BAA2B,CAAC;QAChC,MAAM,EAAE,oBAAoB,EAAE,SAAS,EAAE,qBAAqB,EAAE,GAAG,MAAM,mBAAmB,CAC1F,OAAO,EACP,OAAO,EACP,QAAQ,EACR,cAAc,EACd,QAAQ,EACR,cAAc,EACd,wBAAwB,EACxB,gBAAgB,CAAC,OAAO,CAAC,EACzB,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAC5D,CAAC;QAGF,IAAI,oBAAoB,KAAK,IAAI,EAAE;YACjC,MAAM,YAAY,GAAG,MAAM,cAAc,CACvC,OAAO,EACP;gBACE,YAAY,EAAE,QAAQ;gBACtB,QAAQ,EAAE,SAAS;gBACnB,OAAO,EAAE,SAAS;aACnB,EACD,cAAc,EACd,cAAc,EACd,KAAK,CACN,CAAC;YAEF,IAAI,YAAY,EAAE;gBAChB,2BAA2B,GAAG,YAAY,CAAC,qBAAqB,CAAC;aAClE;iBAAM;gBACL,MAAM,IAAI,KAAK,CAAC,mGAAmG,CAAC,CAAC;aACtH;SACF;aAAM,IAAI,SAAS,EAAE;YACpB,2BAA2B,GAAG,qBAAqB,CAAC;SACrD;aAAM;YAEL,MAAM,IAAI,KAAK,CAAC,mGAAmG,CAAC,CAAC;SACtH;QAKD,MAAM,WAAW,GAAG,YAAY,CAAC,cAAc,CAAC,SAAS,EAAE;YACzD,eAAe,EAAE,KAAK;SACvB,CAAC,CAAC;QAEH,IAAI,WAAW,EAAE;YACf,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE;gBAC3C,eAAe,EAAE,KAAK;aACvB,CAAC,CAAC;YAEH,MAAM,cAAc,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,mBAAmB,CAAC,EAAE,SAAS,CAAC,CAAC;YAE/F,IAAI,cAAc,EAAE;gBAClB,QAAQ,CAAC,iBAAiB,GAAG,cAAc,CAAC;aAC7C;iBAAM;gBACL,QAAQ,CAAC,iBAAiB,GAAG,IAAI,IAAI,EAAE,CAAC;aACzC;YAED,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,mBAAmB,CAAC,EAAE,cAAc,CAAC,CAAC;YACtE,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SACvC;QAED,OAAO,2BAA2B,CAAC;KACpC;IAGD,IAAI,gBAAgB,CAAC,OAAO,CAAC,EAAE;QAC7B,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,IAAI,YAAY,CAAC;QACjB,IAAI,cAAc,CAAC,cAAc,IAAI,cAAc,CAAC,oBAAoB,EAAE;YACxE,MAAM,UAAU,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC9C,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC;YAChE,YAAY,GAAG,EAAE,GAAG,cAAc,EAAE,GAAG,UAAU,EAAE,CAAC;YACpD,MAAM,cAAc,GAAG,gCAAgC,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;YACrF,MAAM,aAAa,GAAG,EAAE,CAAC;YACzB,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACzB,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;oBACzC,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;iBAChC;qBAAM;oBACL,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;YAEH,IAAI,aAAa,CAAC,MAAM,EAAE;gBACxB,MAAM,IAAI,KAAK,CAAC,sDAAsD,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACnG;SACF;QACD,IAAI,cAAc,CAAC,oBAAoB,EAAE;YACvC,qBAAqB,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;SAChD;QACD,OAAO,SAAS,CAAC;KAClB;IAED,MAAM,EAAE,oBAAoB,EAAE,GAAG,cAAc,CAAC;IAEhD,IAAI,oBAAoB,EAAE;QACxB,wBAAwB,GAAG,oBAAoB,CAAC,wBAAwB,EAAE,cAAc,CAAC,CAAC;KAC3F;IACD,MAAM,cAAc,GAClB,OAAO,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM;QAChC,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAE/G,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,MAAM,CAC9C,KAAK,CAAC,EAAE,CAAC,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAClI,CAAC;IAEF,MAAM,qBAAqB,GAAG,GAAG,SAAS,yBAAyB,0BAA0B,EAAE,CAAC;IAChG,MAAM,EAAE,kBAAkB,EAAE,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;IAG9D,MAAM,MAAM,GAAG,MAAM,kBAAkB,CAAC,OAAO,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;IAC1H,IAAI,SAAS,GAAG,EAAE,CAAC;IAEnB,IAAI,cAAc,CAAC,oBAAoB,EAAE;QACvC,SAAS,GAAG,uBAAuB,CAAC,wBAAwB,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;KACvF;IAED,mBAAmB,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;QACtC,IAAI,SAAS,IAAI,MAAM,IAAI,SAAS,KAAK,uBAAuB,IAAI,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;YACzG,SAAS,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;SAC1C;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,KAAK,UAAU,OAAO,CAAC,OAAO;IAC5B,MAAM,QAAQ,GAAG,MAAM,CAAC;IACxB,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;IAC5B,MAAM,YAAY,GAAG,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE,CAAC;IAClE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;QACzC,OAAO;KACR;IACD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,qBAAqB,EAAE,GAAG,oBAAoB,EAAE,CAAC,OAAO,CAAC;IACxF,MAAM,gBAAgB,GAAG,GAAG,SAAS,WAAW,qBAAqB,EAAE,CAAC;IAExE,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAE5C,MAAM,gBAAgB,GAAG,OAAO,CAAC,iBAAiB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACtE,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,OAAO,CAAC,CAAC;IACxD,MAAM,KAAK,GAAG,gBAAgB,CAAC,sBAAsB,CAAC,OAAO,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;IAErF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QAC/B,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;IACH,MAAM,eAAe,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;IAC7D,sBAAsB,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,EAAE,mBAAmB,CAAC,CAAC;AACjH,CAAC;AAED,SAAS,gBAAgB,CAAC,OAAO;IAC/B,OAAO,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;AACzC,CAAC;AAED,SAAS,iBAAiB,CAAC,OAAO;IAChC,MAAM,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC;IACxC,IAAI;QAEF,MAAM,EAAE,UAAU,GAAG,EAAE,EAAE,GAAG,OAAO,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;QACpG,OAAO,UAAU,CAAC,IAAI,IAAI,EAAE,CAAC;KAC9B;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,IAAI,KAAK,CAAC,6CAA6C,GAAG,EAAE,CAAC,CAAC;KACrE;AACH,CAAC;AAED,SAAS,oBAAoB,CAAC,wBAAwB,EAAE,cAAc;IACpE,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;IAChG,MAAM,EAAE,qBAAqB,GAAG,IAAI,EAAE,GAAG,wBAAwB,CAAC;IAClE,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;IACvF,MAAM,cAAc,GAAG,CAAC,CAAC,YAAY,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC;IAC3E,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAChC,MAAM,iBAAiB,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;QACjD,IAAI,QAAQ,KAAK,iBAAiB,EAAE;YAClC,wBAAwB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,GAAG,mBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,CAAC;YAC/H,wBAAwB,CAAC,GAAG,iBAAiB,gBAAgB,CAAC,GAAG,mBAAmB,CAAC,GAAG,iBAAiB,gBAAgB,CAAC,CAAC;YAC3H,wBAAwB,CAAC,GAAG,iBAAiB,eAAe,CAAC,GAAG,mBAAmB,CAAC,GAAG,iBAAiB,eAAe,CAAC,CAAC;YACzH,wBAAwB,CAAC,GAAG,iBAAiB,oBAAoB,CAAC,GAAG,mBAAmB,CAAC,GAAG,iBAAiB,oBAAoB,CAAC,CAAC;SACpI;aAAM;YACL,wBAAwB,CAAC,GAAG,iBAAiB,eAAe,CAAC,GAAG,mBAAmB,CAAC,GAAG,iBAAiB,eAAe,CAAC,CAAC;YACzH,wBAAwB,CAAC,GAAG,iBAAiB,mBAAmB,CAAC,GAAG,mBAAmB,CAAC,GAAG,iBAAiB,mBAAmB,CAAC,CAAC;SAClI;IACH,CAAC,CAAC,CAAC;IACH,OAAO,wBAAwB,CAAC;AAClC,CAAC;AAED,SAAS,uBAAuB,CAAC,wBAAwB,EAAE,MAAM,EAAE,cAAc;IAC/E,MAAM,aAAa,GAAG,EAAE,CAAC;IACzB,IAAI,wBAAwB,CAAC,qBAAqB,IAAI,MAAM,CAAC,qBAAqB,EAAE;QAClF,aAAa,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACzC,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;QAC7D,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,CAAC;QAClF,IAAI,cAAc,CAAC,oBAAoB,EAAE;YACvC,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;YAClG,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBAC3B,MAAM,gBAAgB,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC;gBACxE,MAAM,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC;gBACnE,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,CAAC;YAC5F,CAAC,CAAC,CAAC;YACH,aAAa,CAAC,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;SAC3F;KACF;SAAM,IAAI,wBAAwB,CAAC,qBAAqB,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE;QAC1F,aAAa,CAAC,qBAAqB,GAAG,wBAAwB,CAAC,qBAAqB,CAAC;KACtF;SAAM,IAAI,CAAC,wBAAwB,CAAC,qBAAqB,IAAI,MAAM,CAAC,qBAAqB,EAAE;QAC1F,aAAa,CAAC,qBAAqB,GAAG,MAAM,CAAC,qBAAqB,CAAC;KACpE;IACD,OAAO,aAAa,CAAC;AACvB,CAAC;AAED,SAAS,qBAAqB,CAAC,YAAY,EAAE,SAAS;IACpD,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;IAC9F,SAAS,CAAC,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAC9C,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;QAC5B,MAAM,iBAAiB,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;QACjD,IAAI,QAAQ,KAAK,iBAAiB,EAAE;YAClC,OAAO;gBACL,YAAY,EAAE,QAAQ;gBACtB,SAAS,EAAE,YAAY,CAAC,GAAG,iBAAiB,kBAAkB,CAAC;gBAC/D,OAAO,EAAE,YAAY,CAAC,GAAG,iBAAiB,gBAAgB,CAAC;gBAC3D,MAAM,EAAE,YAAY,CAAC,GAAG,iBAAiB,eAAe,CAAC;gBACzD,WAAW,EAAE,YAAY,CAAC,GAAG,iBAAiB,oBAAoB,CAAC;aACpE,CAAC;SACH;aAAM;YACL,OAAO;gBACL,YAAY,EAAE,QAAQ;gBACtB,SAAS,EAAE,YAAY,CAAC,GAAG,iBAAiB,eAAe,CAAC;gBAC5D,aAAa,EAAE,YAAY,CAAC,GAAG,iBAAiB,mBAAmB,CAAC;aACrE,CAAC;SACH;IACH,CAAC,CAAC,CACH,CAAC;IACF,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAChC,MAAM,iBAAiB,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;QACjD,IAAI,QAAQ,KAAK,iBAAiB,EAAE;YAClC,OAAO,SAAS,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,CAAC;YACzD,OAAO,SAAS,CAAC,GAAG,iBAAiB,gBAAgB,CAAC,CAAC;YACvD,OAAO,SAAS,CAAC,GAAG,iBAAiB,eAAe,CAAC,CAAC;YACtD,OAAO,SAAS,CAAC,GAAG,iBAAiB,oBAAoB,CAAC,CAAC;SAC5D;aAAM;YACL,OAAO,SAAS,CAAC,GAAG,iBAAiB,eAAe,CAAC,CAAC;YACtD,OAAO,SAAS,CAAC,GAAG,iBAAiB,mBAAmB,CAAC,CAAC;SAC3D;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,gCAAgC,CAAC,WAAW,EAAE,cAAc;IACnE,MAAM,cAAc,GAAG,EAAE,CAAC;IAE1B,IAAI,cAAc,CAAC,cAAc,EAAE;QACjC,IAAI,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;YAChE,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACtC,IAAI,WAAW,KAAK,KAAK,EAAE;gBACzB,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAClC;YACD,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC7B,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACtC;SACF;QACD,IAAI,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;YAC/D,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACtC;QACD,IAAI,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;YAC3D,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACpC;QACD,IAAI,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE;YAC9D,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACnC;KACF;IAED,IAAI,cAAc,CAAC,oBAAoB,EAAE;QACvC,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;QAChG,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAChC,MAAM,iBAAiB,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;gBAIjD,IAAI,QAAQ,KAAK,iBAAiB,EAAE;oBAClC,cAAc,CAAC,IAAI,CAAC,GAAG,iBAAiB,eAAe,CAAC,CAAC;oBACzD,cAAc,CAAC,IAAI,CAAC,GAAG,iBAAiB,mBAAmB,CAAC,CAAC;iBAC9D;YACH,CAAC,CAAC,CAAC;SACJ;KACF;IACD,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,KAAK,UAAU,OAAO,CAAC,OAAO,EAAE,WAAW;IACzC,MAAM,aAAa,GAAG,gBAAgB,CAAC,WAAW,CAAC,CAAC;IACpD,IAAI,aAAa,EAAE;QACjB,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC;QACzE,IAAI,aAAa,CAAC,UAAU,IAAI,aAAa,CAAC,cAAc,EAAE;YAC5D,IAAI,OAAO,GAAG,CAAC,QAAQ,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;YAClD,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,IAAI,MAAM,CAAC;YACX,IAAI,YAAY,EAAE;gBAChB,MAAM,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,CAAC;gBAC9F,MAAM,GAAG,GAAG,MAAM,cAAc,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;gBACjE,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;gBAC5B,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;aACrB;YAED,IAAI,UAAU,EAAE;gBACd,IAAI,MAAM,KAAK,MAAM,EAAE;oBACrB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,8CAA8C,MAAM,iBAAiB,MAAM,yBAAyB,CAAC,CAAC;iBAC7H;gBACD,IAAI,CAAC,YAAY,EAAE;oBACjB,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;iBAC9D;gBACD,OAAO,GAAG,CAAC,YAAY,EAAE,GAAG,OAAO,CAAC,CAAC;aACtC;YAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC;gBACnC,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,eAAe;gBACxB,OAAO;gBACP,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS;aAC/C,CAAC,CAAC;YAEH,QAAQ,MAAM,CAAC,SAAS,EAAE;gBACxB,KAAK,YAAY;oBACf,MAAM,WAAW,CAAC,OAAO,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;oBACjD,MAAM;gBACR,KAAK,QAAQ;oBACX,MAAM,mBAAmB,CAAC,OAAO,EAAE,MAAM,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC;oBACrE,MAAM;gBACR,KAAK,YAAY;oBACf,MAAM,uBAAuB,CAAC,OAAO,EAAE,MAAM,EAAE,aAAa,CAAC,cAAc,CAAC,CAAC;oBAC7E,MAAM;gBACR,KAAK,SAAS,CAAC;gBACf;oBACE,MAAM,mBAAmB,CAAC,OAAO,EAAE,MAAM,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC;oBACrE,MAAM,uBAAuB,CAAC,OAAO,EAAE,MAAM,EAAE,aAAa,CAAC,cAAc,CAAC,CAAC;oBAC7E,MAAM;aACT;SACF;aAAM,IAAI,aAAa,CAAC,UAAU,EAAE;YACnC,MAAM,mBAAmB,CAAC,OAAO,EAAE,MAAM,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC;SACtE;aAAM;YACL,MAAM,uBAAuB,CAAC,OAAO,EAAE,MAAM,EAAE,aAAa,CAAC,cAAc,CAAC,CAAC;SAC9E;QACD,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACxB;SAAM;QACL,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,kEAAkE,CAAC,CAAC;KACzF;AACH,CAAC;AAED,SAAS,gBAAgB,CAAC,WAAW;IACnC,IAAI,aAAa,CAAC;IAClB,MAAM,YAAY,GAAG,WAAW,CAAC,IAAI,CAAC;IACtC,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC3C,MAAM,WAAW,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,WAAW,CAAC,OAAO,KAAK,SAAS,IAAI,WAAW,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,IAAI,WAAW,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE;YACnI,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC;YACnC,MAAM;SACP;KACF;IACD,OAAO,aAAa,CAAC;AACvB,CAAC;AAED,KAAK,UAAU,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM;IAC/C,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;IACjD,MAAM,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,CAAC;IAC9F,MAAM,OAAO,GAAG,cAAc,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC;IACvE,MAAM,QAAQ,GAAG,GAAG,OAAO,UAAU,KAAK,IAAI,OAAO,OAAO,CAAC;IAC7D,MAAM,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;IACtC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAClC,CAAC;AAED,KAAK,UAAU,mBAAmB,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU;IAC5D,MAAM,kBAAkB,GAAG,WAAW,MAAM,iDAAiD,MAAM,UAAU,UAAU,UAAU,CAAC;IAClI,MAAM,IAAI,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;IAChD,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IACzC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC5C,CAAC;AAED,KAAK,UAAU,uBAAuB,CAAC,OAAO,EAAE,MAAM,EAAE,cAAc;IACpE,MAAM,sBAAsB,GAAG,WAAW,MAAM,gDAAgD,MAAM,OAAO,cAAc,EAAE,CAAC;IAC9H,MAAM,IAAI,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;IACpD,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IAC7C,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAChD,CAAC;AAED,SAAS,qBAAqB,CAAC,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW;IACxE,MAAM,EAAE,0BAA0B,EAAE,GAAG,oBAAoB,EAAE,CAAC,OAAO,CAAC,CAAC;IACvE,MAAM,qBAAqB,GAAG,GAAG,SAAS,yBAAyB,0BAA0B,EAAE,CAAC;IAChG,MAAM,EAAE,cAAc,EAAE,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;IAE1D,IAAI,CAAC,qBAAqB,EAAE;QAC1B,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,yBAAyB,YAAY,EAAE,CAAC,CAAC;QAC5D,OAAO;KACR;IAED,OAAO,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;AAC5D,CAAC;AAED,MAAM,CAAC,OAAO,GAAG;IACf,WAAW;IACX,cAAc;IACd,qBAAqB;IACrB,OAAO;IACP,OAAO;IACP,qBAAqB;IACrB,cAAc;CACf,CAAC","sourcesContent":["const inquirer = require('inquirer');\nconst _ = require('lodash');\nconst { stateManager, open } = require('amplify-cli-core');\nconst { getAuthResourceName } = require('../../utils/getAuthResourceName');\nconst { copyCfnTemplate, saveResourceParameters } = require('./utils/synthesize-resources');\nconst { ENV_SPECIFIC_PARAMS, AmplifyAdmin, UserPool, IdentityPool, BothPools, privateKeys } = require('./constants');\nconst { getAddAuthHandler, getUpdateAuthHandler } = require('./handlers/resource-handlers');\nconst { getSupportedServices } = require('../supported-services');\nconst { importResource, importedAuthEnvInit } = require('./import');\nconst { AuthInputState } = require('./auth-inputs-manager/auth-input-state');\n\nfunction serviceQuestions(context, defaultValuesFilename, stringMapsFilename, serviceWalkthroughFilename, serviceMetadata) {\n  const serviceWalkthroughSrc = `${__dirname}/service-walkthroughs/${serviceWalkthroughFilename}`;\n  const { serviceWalkthrough } = require(serviceWalkthroughSrc);\n  return serviceWalkthrough(context, defaultValuesFilename, stringMapsFilename, serviceMetadata);\n}\n\nasync function addResource(context, service, skipNextSteps = false) {\n  const serviceMetadata = getSupportedServices()[service];\n  const { defaultValuesFilename, stringMapsFilename, serviceWalkthroughFilename } = serviceMetadata;\n  return getAddAuthHandler(\n    context,\n    skipNextSteps,\n  )(await serviceQuestions(context, defaultValuesFilename, stringMapsFilename, serviceWalkthroughFilename, serviceMetadata));\n}\n\nasync function updateResource(context, { service }) {\n  const serviceMetadata = getSupportedServices()[service];\n  const { defaultValuesFilename, stringMapsFilename, serviceWalkthroughFilename } = serviceMetadata;\n  return getUpdateAuthHandler(context)(\n    await serviceQuestions(context, defaultValuesFilename, stringMapsFilename, serviceWalkthroughFilename, serviceMetadata),\n  );\n}\n\nasync function updateConfigOnEnvInit(context, category, service) {\n  const srvcMetaData = getSupportedServices().Cognito;\n  const { defaultValuesFilename, stringMapsFilename, serviceWalkthroughFilename, provider } = srvcMetaData;\n\n  const providerPlugin = context.amplify.getPluginInstance(context, provider);\n  // previously selected answers\n  const resourceParams = providerPlugin.loadResourceParameters(context, 'auth', service);\n  // ask only env specific questions\n  let currentEnvSpecificValues = context.amplify.loadEnvResourceParameters(context, category, service);\n\n  const resource = _.get(context.exeInfo, ['amplifyMeta', category, service]);\n\n  // Imported auth resource behavior is different from Amplify managed resources, as\n  // they are immutable and all parameters and values are derived from the currently\n  // cloud deployed values.\n  if (resource && resource.serviceType === 'imported') {\n    let envSpecificParametersResult;\n    const { doServiceWalkthrough, succeeded, envSpecificParameters } = await importedAuthEnvInit(\n      context,\n      service,\n      resource,\n      resourceParams,\n      provider,\n      providerPlugin,\n      currentEnvSpecificValues,\n      isInHeadlessMode(context),\n      isInHeadlessMode(context) ? getHeadlessParams(context) : {},\n    );\n\n    // No need for headless check as this will never be true for headless\n    if (doServiceWalkthrough === true) {\n      const importResult = await importResource(\n        context,\n        {\n          providerName: provider,\n          provider: undefined, // We don't have the resolved directory of the provider we pass in an instance\n          service: 'Cognito',\n        },\n        resourceParams,\n        providerPlugin,\n        false,\n      );\n\n      if (importResult) {\n        envSpecificParametersResult = importResult.envSpecificParameters;\n      } else {\n        throw new Error('There was an error importing the previously configured auth configuration to the new environment.');\n      }\n    } else if (succeeded) {\n      envSpecificParametersResult = envSpecificParameters;\n    } else {\n      // succeeded === false | undefined\n      throw new Error('There was an error importing the previously configured auth configuration to the new environment.');\n    }\n\n    // If the imported resource was synced up to the cloud before, copy over the timestamp since frontend generation\n    // and other pieces of the CLI could rely on the presence of a value, if no timestamp was found for the same\n    // resource, then do nothing as push will assign one.\n    const currentMeta = stateManager.getCurrentMeta(undefined, {\n      throwIfNotExist: false,\n    });\n\n    if (currentMeta) {\n      const meta = stateManager.getMeta(undefined, {\n        throwIfNotExist: false,\n      });\n\n      const cloudTimestamp = _.get(currentMeta, [category, service, 'lastPushTimeStamp'], undefined);\n\n      if (cloudTimestamp) {\n        resource.lastPushTimeStamp = cloudTimestamp;\n      } else {\n        resource.lastPushTimeStamp = new Date();\n      }\n\n      _.set(meta, [category, service, 'lastPushTimeStamp'], cloudTimestamp);\n      stateManager.setMeta(undefined, meta);\n    }\n\n    return envSpecificParametersResult;\n  }\n\n  // legacy headless mode (only supports init)\n  if (isInHeadlessMode(context)) {\n    const envParams = {};\n    let mergedValues;\n    if (resourceParams.thirdPartyAuth || resourceParams.hostedUIProviderMeta) {\n      const authParams = getHeadlessParams(context);\n      const projectType = context.amplify.getProjectConfig().frontend;\n      mergedValues = { ...resourceParams, ...authParams };\n      const requiredParams = getRequiredParamsForHeadlessInit(projectType, resourceParams);\n      const missingParams = [];\n      requiredParams.forEach(p => {\n        if (Object.keys(mergedValues).includes(p)) {\n          envParams[p] = mergedValues[p];\n        } else {\n          missingParams.push(p);\n        }\n      });\n\n      if (missingParams.length) {\n        throw new Error(`auth headless is missing the following inputParams ${missingParams.join(', ')}`);\n      }\n    }\n    if (resourceParams.hostedUIProviderMeta) {\n      parseCredsForHeadless(mergedValues, envParams);\n    }\n    return envParams;\n  }\n\n  const { hostedUIProviderMeta } = resourceParams;\n\n  if (hostedUIProviderMeta) {\n    currentEnvSpecificValues = getOAuthProviderKeys(currentEnvSpecificValues, resourceParams);\n  }\n  const isPullingOrEnv =\n    context.input.command === 'pull' ||\n    (context.input.command === 'env' && context.input.subCommands && !context.input.subCommands.includes('add'));\n  // don't ask for env_specific params when checking out env or pulling\n  srvcMetaData.inputs = srvcMetaData.inputs.filter(\n    input => ENV_SPECIFIC_PARAMS.includes(input.key) && !Object.keys(currentEnvSpecificValues).includes(input.key) && !isPullingOrEnv,\n  );\n\n  const serviceWalkthroughSrc = `${__dirname}/service-walkthroughs/${serviceWalkthroughFilename}`;\n  const { serviceWalkthrough } = require(serviceWalkthroughSrc);\n\n  // interactive mode\n  const result = await serviceWalkthrough(context, defaultValuesFilename, stringMapsFilename, srvcMetaData, resourceParams);\n  let envParams = {};\n\n  if (resourceParams.hostedUIProviderMeta) {\n    envParams = formatCredsforEnvParams(currentEnvSpecificValues, result, resourceParams);\n  }\n\n  ENV_SPECIFIC_PARAMS.forEach(paramName => {\n    if (paramName in result && paramName !== 'hostedUIProviderCreds' && privateKeys.indexOf(paramName) === -1) {\n      envParams[paramName] = result[paramName];\n    }\n  });\n\n  return envParams;\n}\n\nasync function migrate(context) {\n  const category = 'auth';\n  const { amplify } = context;\n  const existingAuth = context.migrationInfo.amplifyMeta.auth || {};\n  if (!Object.keys(existingAuth).length > 0) {\n    return;\n  }\n  const { provider, cfnFilename, defaultValuesFilename } = getSupportedServices().Cognito;\n  const defaultValuesSrc = `${__dirname}/assets/${defaultValuesFilename}`;\n\n  const { roles } = require(defaultValuesSrc);\n\n  const providerInstance = amplify.getPluginInstance(context, provider);\n  const resourceName = await getAuthResourceName(context);\n  const props = providerInstance.loadResourceParameters(context, 'auth', resourceName);\n  // Roles have changed to ref. Removing old hardcoded role ref\n  Object.keys(roles).forEach(key => {\n    delete props[key];\n  });\n  await copyCfnTemplate(context, category, props, cfnFilename);\n  saveResourceParameters(context, provider, category, resourceName, { ...roles, ...props }, ENV_SPECIFIC_PARAMS);\n}\n\nfunction isInHeadlessMode(context) {\n  return context.exeInfo.inputParams.yes;\n}\n\nfunction getHeadlessParams(context) {\n  const { inputParams } = context.exeInfo;\n  try {\n    // If the input given is a string validate it using JSON parse\n    const { categories = {} } = typeof inputParams === 'string' ? JSON.parse(inputParams) : inputParams;\n    return categories.auth || {};\n  } catch (err) {\n    throw new Error(`Failed to parse auth headless parameters: ${err}`);\n  }\n}\n\nfunction getOAuthProviderKeys(currentEnvSpecificValues, resourceParams) {\n  const oAuthProviders = JSON.parse(resourceParams.hostedUIProviderMeta).map(h => h.ProviderName);\n  const { hostedUIProviderCreds = '[]' } = currentEnvSpecificValues;\n  const configuredProviders = JSON.parse(hostedUIProviderCreds).map(h => h.ProviderName);\n  const deltaProviders = _.intersection(oAuthProviders, configuredProviders);\n  deltaProviders.forEach(provider => {\n    const lowerCaseProvider = provider.toLowerCase();\n    if (provider === 'SignInWithApple') {\n      currentEnvSpecificValues[`${lowerCaseProvider}ClientIdUserPool`] = configuredProviders[`${lowerCaseProvider}ClientIdUserPool`];\n      currentEnvSpecificValues[`${lowerCaseProvider}TeamIdUserPool`] = configuredProviders[`${lowerCaseProvider}TeamIdUserPool`];\n      currentEnvSpecificValues[`${lowerCaseProvider}KeyIdUserPool`] = configuredProviders[`${lowerCaseProvider}KeyIdUserPool`];\n      currentEnvSpecificValues[`${lowerCaseProvider}PrivateKeyUserPool`] = configuredProviders[`${lowerCaseProvider}PrivateKeyUserPool`];\n    } else {\n      currentEnvSpecificValues[`${lowerCaseProvider}AppIdUserPool`] = configuredProviders[`${lowerCaseProvider}AppIdUserPool`];\n      currentEnvSpecificValues[`${lowerCaseProvider}AppSecretUserPool`] = configuredProviders[`${lowerCaseProvider}AppSecretUserPool`];\n    }\n  });\n  return currentEnvSpecificValues;\n}\n\nfunction formatCredsforEnvParams(currentEnvSpecificValues, result, resourceParams) {\n  const partialParams = {};\n  if (currentEnvSpecificValues.hostedUIProviderCreds && result.hostedUIProviderCreds) {\n    partialParams.hostedUIProviderCreds = [];\n    const inputResult = JSON.parse(result.hostedUIProviderCreds);\n    const previousResult = JSON.parse(currentEnvSpecificValues.hostedUIProviderCreds);\n    if (resourceParams.hostedUIProviderMeta) {\n      const currentProviders = JSON.parse(resourceParams.hostedUIProviderMeta).map(h => h.ProviderName);\n      currentProviders.forEach(c => {\n        const previousProvider = previousResult.find(p => p.ProviderName === c);\n        const resultProvider = inputResult.find(r => r.ProviderName === c);\n        partialParams.hostedUIProviderCreds.push(Object.assign(resultProvider, previousProvider));\n      });\n      partialParams.hostedUIProviderCreds = JSON.stringify(partialParams.hostedUIProviderCreds);\n    }\n  } else if (currentEnvSpecificValues.hostedUIProviderCreds && !result.hostedUIProviderCreds) {\n    partialParams.hostedUIProviderCreds = currentEnvSpecificValues.hostedUIProviderCreds;\n  } else if (!currentEnvSpecificValues.hostedUIProviderCreds && result.hostedUIProviderCreds) {\n    partialParams.hostedUIProviderCreds = result.hostedUIProviderCreds;\n  }\n  return partialParams;\n}\n\nfunction parseCredsForHeadless(mergedValues, envParams) {\n  const oAuthProviders = JSON.parse(mergedValues.hostedUIProviderMeta).map(h => h.ProviderName);\n  envParams.hostedUIProviderCreds = JSON.stringify(\n    oAuthProviders.map(provider => {\n      const lowerCaseProvider = provider.toLowerCase();\n      if (provider === 'SignInWithApple') {\n        return {\n          ProviderName: provider,\n          client_id: mergedValues[`${lowerCaseProvider}ClientIdUserPool`],\n          team_id: mergedValues[`${lowerCaseProvider}TeamIdUserPool`],\n          key_id: mergedValues[`${lowerCaseProvider}KeyIdUserPool`],\n          private_key: mergedValues[`${lowerCaseProvider}PrivateKeyUserPool`],\n        };\n      } else {\n        return {\n          ProviderName: provider,\n          client_id: mergedValues[`${lowerCaseProvider}AppIdUserPool`],\n          client_secret: mergedValues[`${lowerCaseProvider}AppSecretUserPool`],\n        };\n      }\n    }),\n  );\n  oAuthProviders.forEach(provider => {\n    const lowerCaseProvider = provider.toLowerCase();\n    if (provider === 'SignInWithApple') {\n      delete envParams[`${lowerCaseProvider}ClientIdUserPool`];\n      delete envParams[`${lowerCaseProvider}TeamIdUserPool`];\n      delete envParams[`${lowerCaseProvider}KeyIdUserPool`];\n      delete envParams[`${lowerCaseProvider}PrivateKeyUserPool`];\n    } else {\n      delete envParams[`${lowerCaseProvider}AppIdUserPool`];\n      delete envParams[`${lowerCaseProvider}AppSecretUserPool`];\n    }\n  });\n}\n\nfunction getRequiredParamsForHeadlessInit(projectType, previousValues) {\n  const requiredParams = [];\n\n  if (previousValues.thirdPartyAuth) {\n    if (previousValues.authProviders.includes('accounts.google.com')) {\n      requiredParams.push('googleClientId');\n      if (projectType === 'ios') {\n        requiredParams.push('googleIos');\n      }\n      if (projectType === 'android') {\n        requiredParams.push('googleAndroid');\n      }\n    }\n    if (previousValues.authProviders.includes('graph.facebook.com')) {\n      requiredParams.push('facebookAppId');\n    }\n    if (previousValues.authProviders.includes('www.amazon.com')) {\n      requiredParams.push('amazonAppId');\n    }\n    if (previousValues.authProviders.includes('appleid.apple.com')) {\n      requiredParams.push('appleAppId');\n    }\n  }\n\n  if (previousValues.hostedUIProviderMeta) {\n    const oAuthProviders = JSON.parse(previousValues.hostedUIProviderMeta).map(h => h.ProviderName);\n    if (oAuthProviders && oAuthProviders.length > 0) {\n      oAuthProviders.forEach(provider => {\n        const lowerCaseProvider = provider.toLowerCase();\n        // Everything but SIWA is required because the private key isn't returned by Cognito\n        // so we can't initialize SIWA in a new environment programmatically.\n        // User will have to reconfigure SIWA through Admin UI or CLI.\n        if (provider !== 'SignInWithApple') {\n          requiredParams.push(`${lowerCaseProvider}AppIdUserPool`);\n          requiredParams.push(`${lowerCaseProvider}AppSecretUserPool`);\n        }\n      });\n    }\n  }\n  return requiredParams;\n}\n\nasync function console(context, amplifyMeta) {\n  const cognitoOutput = getCognitoOutput(amplifyMeta);\n  if (cognitoOutput) {\n    const { AmplifyAppId, Region } = amplifyMeta.providers.awscloudformation;\n    if (cognitoOutput.UserPoolId && cognitoOutput.IdentityPoolId) {\n      let choices = [UserPool, IdentityPool, BothPools];\n      let isAdminApp = false;\n      let region;\n      if (AmplifyAppId) {\n        const providerPlugin = require(context.amplify.getProviderPlugins(context).awscloudformation);\n        const res = await providerPlugin.isAmplifyAdminApp(AmplifyAppId);\n        isAdminApp = res.isAdminApp;\n        region = res.region;\n      }\n\n      if (isAdminApp) {\n        if (region !== Region) {\n          context.print.warning(`Region mismatch: Amplify service returned '${region}', but found '${Region}' in amplify-meta.json.`);\n        }\n        if (!AmplifyAppId) {\n          throw new Error('Missing AmplifyAppId in amplify-meta.json');\n        }\n        choices = [AmplifyAdmin, ...choices];\n      }\n\n      const answer = await inquirer.prompt({\n        name: 'selection',\n        type: 'list',\n        message: 'Which console',\n        choices,\n        default: isAdminApp ? AmplifyAdmin : BothPools,\n      });\n\n      switch (answer.selection) {\n        case AmplifyAdmin:\n          await openAdminUI(context, AmplifyAppId, Region);\n          break;\n        case UserPool:\n          await openUserPoolConsole(context, Region, cognitoOutput.UserPoolId);\n          break;\n        case IdentityPool:\n          await openIdentityPoolConsole(context, Region, cognitoOutput.IdentityPoolId);\n          break;\n        case BothPools:\n        default:\n          await openUserPoolConsole(context, Region, cognitoOutput.UserPoolId);\n          await openIdentityPoolConsole(context, Region, cognitoOutput.IdentityPoolId);\n          break;\n      }\n    } else if (cognitoOutput.UserPoolId) {\n      await openUserPoolConsole(context, Region, cognitoOutput.UserPoolId);\n    } else {\n      await openIdentityPoolConsole(context, Region, cognitoOutput.IdentityPoolId);\n    }\n    context.print.info('');\n  } else {\n    context.print.error('Amazon Cognito resources have NOT been created for your project.');\n  }\n}\n\nfunction getCognitoOutput(amplifyMeta) {\n  let cognitoOutput;\n  const categoryMeta = amplifyMeta.auth;\n  const services = Object.keys(categoryMeta);\n  for (let i = 0; i < services.length; i += 1) {\n    const serviceMeta = categoryMeta[services[i]];\n    if (serviceMeta.service === 'Cognito' && serviceMeta.output && (serviceMeta.output.UserPoolId || serviceMeta.output.IdentityPoolId)) {\n      cognitoOutput = serviceMeta.output;\n      break;\n    }\n  }\n  return cognitoOutput;\n}\n\nasync function openAdminUI(context, appId, region) {\n  const { envName } = context.amplify.getEnvInfo();\n  const providerPlugin = require(context.amplify.getProviderPlugins(context).awscloudformation);\n  const baseUrl = providerPlugin.adminBackendMap[region].amplifyAdminUrl;\n  const adminUrl = `${baseUrl}/admin/${appId}/${envName}/auth`;\n  await open(adminUrl, { wait: false });\n  context.print.success(adminUrl);\n}\n\nasync function openUserPoolConsole(context, region, userPoolId) {\n  const userPoolConsoleUrl = `https://${region}.console.aws.amazon.com/cognito/users/?region=${region}#/pool/${userPoolId}/details`;\n  await open(userPoolConsoleUrl, { wait: false });\n  context.print.info('User Pool console:');\n  context.print.success(userPoolConsoleUrl);\n}\n\nasync function openIdentityPoolConsole(context, region, identityPoolId) {\n  const identityPoolConsoleUrl = `https://${region}.console.aws.amazon.com/cognito/pool/?region=${region}&id=${identityPoolId}`;\n  await open(identityPoolConsoleUrl, { wait: false });\n  context.print.info('Identity Pool console:');\n  context.print.success(identityPoolConsoleUrl);\n}\n\nfunction getPermissionPolicies(context, service, resourceName, crudOptions) {\n  const { serviceWalkthroughFilename } = getSupportedServices()[service];\n  const serviceWalkthroughSrc = `${__dirname}/service-walkthroughs/${serviceWalkthroughFilename}`;\n  const { getIAMPolicies } = require(serviceWalkthroughSrc);\n\n  if (!getPermissionPolicies) {\n    context.print.info(`No policies found for ${resourceName}`);\n    return;\n  }\n\n  return getIAMPolicies(context, resourceName, crudOptions);\n}\n\nmodule.exports = {\n  addResource,\n  updateResource,\n  updateConfigOnEnvInit,\n  migrate,\n  console,\n  getPermissionPolicies,\n  importResource,\n};\n"]}