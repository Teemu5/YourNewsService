{"version":3,"file":"override.js","sourceRoot":"","sources":["../../../src/commands/auth/override.ts"],"names":[],"mappings":";;;;;;AAAA,gDAAwB;AACxB,uDAAmG;AACnG,qDAAoD;AACpD,oHAAmH;AACnH,yEAAsE;AAEtE,MAAM,QAAQ,GAAG,MAAM,CAAC;AAEX,QAAA,IAAI,GAAG,WAAW,CAAC;AAEzB,MAAM,GAAG,GAAG,KAAK,EAAE,OAAmB,EAAE,EAAE;IAC/C,MAAM,WAAW,GAAG,+BAAY,CAAC,OAAO,EAAE,CAAC;IAC3C,MAAM,aAAa,GAAa,EAAE,CAAC;IACnC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;QACxD,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IACH,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;QAC9B,MAAM,UAAU,GAAG,kEAAkE,CAAC;QACtF,yBAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC1B,OAAO;KACR;IACD,MAAM,oBAAoB,GAAG,MAAM,0BAAQ,CAAC,IAAI,CAAgB,qDAAqD,EAAE,aAAa,CAAC,CAAC;IAEtI,IAAI,gBAAgB,CAAC;IACrB,IAAI,oBAAoB,KAAK,gBAAgB,EAAE;QAC7C,gBAAgB,GAAG,MAAM,yCAAmB,CAAC,OAAO,CAAC,CAAC;QACtD,MAAM,qDAA0B,CAAC,OAAO,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;KACpE;SAAM;QACL,MAAM,qDAA0B,CAAC,OAAO,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;KACxE;IAGD,IAAI,oBAAoB,KAAK,gBAAgB,EAAE;QAC7C,MAAM,+BAA+B,CAAC,OAAO,EAAE,oBAAoB,EAAE,gBAAgB,CAAC,CAAC;KACxF;SAAM;QACL,MAAM,+BAA+B,CAAC,OAAO,EAAE,oBAAoB,EAAE,MAAM,CAAC,CAAC;KAC9E;AACH,CAAC,CAAC;AA3BW,QAAA,GAAG,OA2Bd;AAEF,MAAM,+BAA+B,GAAG,KAAK,EAAE,OAAmB,EAAE,YAAoB,EAAE,YAAoB,EAAE,EAAE;IAChH,MAAM,UAAU,GAAG,8BAAW,CAAC,iBAAiB,EAAE,CAAC;IACnD,MAAM,QAAQ,GAAG,cAAI,CAAC,SAAS,CAAC,cAAI,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC;IAC/E,MAAM,OAAO,GAAG,cAAI,CAAC,SAAS,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,oBAAoB,EAAE,YAAY,CAAC,CAAC,CAAC;IAExH,MAAM,2CAAwB,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC7D,CAAC,CAAC","sourcesContent":["import path from 'path';\nimport { generateOverrideSkeleton, $TSContext, stateManager, pathManager } from 'amplify-cli-core';\nimport { printer, prompter } from 'amplify-prompts';\nimport { checkAuthResourceMigration } from '../../provider-utils/awscloudformation/utils/check-for-auth-migration';\nimport { getAuthResourceName } from '../../utils/getAuthResourceName';\n\nconst category = 'auth';\n\nexport const name = 'overrides';\n\nexport const run = async (context: $TSContext) => {\n  const amplifyMeta = stateManager.getMeta();\n  const authResources: string[] = [];\n  Object.keys(amplifyMeta[category]).forEach(resourceName => {\n    authResources.push(resourceName);\n  });\n  if (authResources.length === 0) {\n    const errMessage = 'No auth resources to override. Add auth using `amplify add auth`';\n    printer.error(errMessage);\n    return;\n  }\n  const selectedAuthResource = await prompter.pick<'one', string>(`Which resource would you like to add overrides for?`, authResources);\n  // check if migration needed\n  let authResourceName;\n  if (selectedAuthResource === 'userPoolGroups') {\n    authResourceName = await getAuthResourceName(context);\n    await checkAuthResourceMigration(context, authResourceName, false);\n  } else {\n    await checkAuthResourceMigration(context, selectedAuthResource, false);\n  }\n\n  // override structure for auth resource\n  if (selectedAuthResource === 'userPoolGroups') {\n    await generateOverrideforAuthResource(context, selectedAuthResource, 'userPoolGroups');\n  } else {\n    await generateOverrideforAuthResource(context, selectedAuthResource, 'auth');\n  }\n};\n\nconst generateOverrideforAuthResource = async (context: $TSContext, resourceName: string, resourceType: string) => {\n  const backendDir = pathManager.getBackendDirPath();\n  const destPath = path.normalize(path.join(backendDir, category, resourceName));\n  const srcPath = path.normalize(path.join(__dirname, '..', '..', '..', 'resources', 'overrides-resource', resourceType));\n\n  await generateOverrideSkeleton(context, srcPath, destPath);\n};\n"]}