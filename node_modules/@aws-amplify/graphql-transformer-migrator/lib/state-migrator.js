"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.revertTransformerVersion = exports.updateTransformerVersion = void 0;
const amplify_cli_core_1 = require("amplify-cli-core");
const lodash_1 = __importDefault(require("lodash"));
const updateTransformerVersion = async (env) => {
    const mutation = (cliJSON) => {
        lodash_1.default.set(cliJSON, ['features', 'graphqltransformer', 'useexperimentalpipelinedtransformer'], true);
        lodash_1.default.set(cliJSON, ['features', 'graphqltransformer', 'transformerversion'], 2);
        lodash_1.default.set(cliJSON, ['features', 'graphqltransformer', 'suppressschemamigrationprompt'], true);
    };
    await mutateCliJsonFile(mutation, env);
};
exports.updateTransformerVersion = updateTransformerVersion;
const revertTransformerVersion = async (env) => {
    const mutation = (cliJSON) => {
        lodash_1.default.set(cliJSON, ['features', 'graphqltransformer', 'useexperimentalpipelinedtransformer'], false);
        lodash_1.default.set(cliJSON, ['features', 'graphqltransformer', 'transformerversion'], 1);
        lodash_1.default.set(cliJSON, ['features', 'graphqltransformer', 'suppressschemamigrationprompt'], false);
    };
    await mutateCliJsonFile(mutation, env);
};
exports.revertTransformerVersion = revertTransformerVersion;
const mutateCliJsonFile = async (mutation, env) => {
    var _a;
    const projectPath = (_a = amplify_cli_core_1.pathManager.findProjectRoot()) !== null && _a !== void 0 ? _a : process.cwd();
    let envCLI = true;
    let cliJSON;
    if (env) {
        cliJSON = amplify_cli_core_1.stateManager.getCLIJSON(projectPath, env, { throwIfNotExist: false });
    }
    if (!cliJSON) {
        envCLI = false;
        cliJSON = amplify_cli_core_1.stateManager.getCLIJSON(projectPath);
    }
    mutation(cliJSON);
    amplify_cli_core_1.stateManager.setCLIJSON(projectPath, cliJSON, envCLI ? env : undefined);
    await amplify_cli_core_1.FeatureFlags.reloadValues();
};
//# sourceMappingURL=state-migrator.js.map