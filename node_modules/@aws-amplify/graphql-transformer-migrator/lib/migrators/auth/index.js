"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.migrateAuth = exports.defaultProviderMap = exports.addAuthRuleToNode = exports.setAuthRules = exports.getAuthRules = exports.hasAuthDirectives = void 0;
const model_1 = require("../model");
const defaultAuth_1 = require("./defaultAuth");
const ownerAuth_1 = require("./ownerAuth");
const generators_1 = require("../generators");
function hasAuthDirectives(node) {
    return node.directives.some((dir) => dir.name.value === 'auth');
}
exports.hasAuthDirectives = hasAuthDirectives;
function getAuthRules(node) {
    return node.directives.find((dir) => dir.name.value === 'auth').arguments[0].value.values;
}
exports.getAuthRules = getAuthRules;
function setAuthRules(node, rules) {
    node.directives.find((dir) => dir.name.value === 'auth').arguments[0].value.values = rules;
}
exports.setAuthRules = setAuthRules;
function addAuthRuleToNode(node, rule) {
    if (!hasAuthDirectives(node)) {
        const valueNode = generators_1.createListValueNode([rule]);
        const authDirArgs = generators_1.createArgumentNode('rules', valueNode);
        const authDir = generators_1.createDirectiveNode('auth', [authDirArgs]);
        node.directives.push(authDir);
    }
    else {
        const authRules = getAuthRules(node);
        if (authRules) {
            authRules.push(rule);
        }
    }
}
exports.addAuthRuleToNode = addAuthRuleToNode;
exports.defaultProviderMap = new Map([
    ['public', 'apiKey'],
    ['private', 'userPools'],
    ['owner', 'userPools'],
    ['groups', 'userPools'],
]);
function migrateAuth(node, defaultAuthMode) {
    if (!model_1.isModelType(node)) {
        return;
    }
    if (hasAuthDirectives(node)) {
        ownerAuth_1.migrateOwnerAuth(node, defaultAuthMode);
    }
    defaultAuth_1.migrateDefaultAuthMode(node, defaultAuthMode);
}
exports.migrateAuth = migrateAuth;
//# sourceMappingURL=index.js.map