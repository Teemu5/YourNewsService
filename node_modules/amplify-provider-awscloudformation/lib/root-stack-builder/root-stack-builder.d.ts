import * as cdk from '@aws-cdk/core';
import * as s3 from '@aws-cdk/aws-s3';
import * as iam from '@aws-cdk/aws-iam';
import { AmplifyRootStackTemplate } from '@aws-amplify/cli-extensibility-helper';
import { IStackSynthesizer, ISynthesisSession } from '@aws-cdk/core';
export declare type AmplifyRootStackProps = {
    synthesizer: IStackSynthesizer;
};
export declare class AmplifyRootStack extends cdk.Stack implements AmplifyRootStackTemplate {
    _scope: cdk.Construct;
    deploymentBucket: s3.CfnBucket;
    authRole: iam.CfnRole;
    unauthRole: iam.CfnRole;
    private _cfnParameterMap;
    constructor(scope: cdk.Construct, id: string, props: AmplifyRootStackProps);
    addCfnOutput(props: cdk.CfnOutputProps, logicalId: string): void;
    addCfnMapping(props: cdk.CfnMappingProps, logicalId: string): void;
    addCfnCondition(props: cdk.CfnConditionProps, logicalId: string): void;
    addCfnResource(props: cdk.CfnResourceProps, logicalId: string): void;
    addCfnParameter(props: cdk.CfnParameterProps, logicalId: string): void;
    getCfnParameter(logicalId: string): cdk.CfnParameter;
    generateRootStackResources: () => Promise<void>;
    renderCloudFormationTemplate: (_: ISynthesisSession) => string;
}
export declare class AmplifyRootStackOutputs extends cdk.Stack implements AmplifyRootStackTemplate {
    constructor(scope: cdk.Construct, id: string, props: AmplifyRootStackProps);
    deploymentBucket?: s3.CfnBucket;
    authRole?: iam.CfnRole;
    unauthRole?: iam.CfnRole;
    addCfnParameter(props: cdk.CfnParameterProps, logicalId: string): void;
    addCfnOutput(props: cdk.CfnOutputProps, logicalId: string): void;
    addCfnMapping(props: cdk.CfnMappingProps, logicalId: string): void;
    addCfnCondition(props: cdk.CfnConditionProps, logicalId: string): void;
    addCfnResource(props: cdk.CfnResourceProps, logicalId: string): void;
    renderCloudFormationTemplate: (_: ISynthesisSession) => string;
}
//# sourceMappingURL=root-stack-builder.d.ts.map